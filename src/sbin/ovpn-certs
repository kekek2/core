#!/bin/sh

CA_KEY_FILE=/tmp/__ca.key
CA_CRT_FILE=/tmp/__ca.crt
KEY_FILE=/tmp/__srv.key
REQ_FILE=/tmp/__srv.req

CONFIG_XML=/conf/config.xml
CA_DESCR="TING default VPN CA"
CA_REF=
CA_SERT=
CA_KEY=
SERIAL=
SERVER_DESCR="TING default VPN server certificate"


usage()
{
cat << EOT
usage: 
$0 [check-config|create-keys]
EOT
}

generate_ca_cert()
{
    if [ -f ${CA_KEY_FILE} ]; then
	rm ${CA_KEY_FILE} || { echo "Can't delete temporary file!" ; exit; }
    fi

    if [ ! -f ${CONFIG_XML} ]; then
	echo "No ${CONFIG_XML} file found"
	exit 1
    fi
    
    openssl genrsa  -out ${CA_KEY_FILE} 2048
    CA_KEY=`cat ${CA_KEY_FILE}`
    CA_CERT=`openssl req -new -x509 -days 3650 -key ${CA_KEY_FILE} -subj "/C=RU/ST=-/L=-/O=-/CN=${CA_DESCR}"`
    rm ${CA_KEY_FILE}

    SERIAL=`grep '<serial>' ${CONFIG_XML} | sed 's/<[\/]*serial>//g' | tr -d ' ' | sort -g | tail -n 1`
    if [ "${SERIAL}" == "" ]; then
	SERIAL=0
    fi
    SERIAL=$((SERIAL+1))
    CA_REF=`jot -r 1 1111111111111 9999999999999`
    CRT=`echo "${CA_CERT}" | openssl enc -base64 | tr -d '\n'`
    PRV=`echo "${CA_KEY}" | openssl enc -base64 | tr -d '\n'`
    CA_NODE="
  <ca>
    <refid>${CA_REF}</refid>
    <descr>${CA_DESCR}</descr>
    <crt>${CRT}</crt>
    <prv>${PRV}</prv>
    <serial>${SERIAL}</serial>
  </ca>"
    
    sed -i '' -e '/<\/opnsense>/d' ${CONFIG_XML}
    echo "${CA_NODE}" >> ${CONFIG_XML}
    echo '</opnsense>' >> ${CONFIG_XML}
}

generate_server_cert()
{
    if [ -f ${KEY_FILE} ]; then
	rm ${KEY_FILE} || { echo "Can't delete temporary file!" ; exit; }
    fi

    if [ ! -f ${CONFIG_XML} ]; then
	echo "No ${CONFIG_XML} file found"
	exit 1
    fi
    
    SERIAL=$((SERIAL+1))
    echo "${CA_CERT}" > ${CA_CRT_FILE}
    echo "${CA_KEY}" > ${CA_KEY_FILE}
    
    openssl genrsa  -out ${KEY_FILE} 2048
    KEY=`cat ${KEY_FILE}`
    openssl req -new -key ${KEY_FILE} -out ${REQ_FILE} -subj "/C=RU/ST=-/L=-/O=-/CN=${SERVER_DESCR}"
    CERT=`openssl x509 -req -days 365 -in ${REQ_FILE} -CA ${CA_CRT_FILE} -CAkey ${CA_KEY_FILE} -set_serial ${SERIAL}`
    rm ${KEY_FILE}
    rm ${CA_KEY_FILE}
    rm ${CA_CRT_FILE}
    rm ${REQ_FILE}

    REF=`jot -r 1 1111111111111 9999999999999`
    CRT=`echo "${CERT}" | openssl enc -base64 | tr -d '\n'`
    PRV=`echo "${KEY}" | openssl enc -base64 | tr -d '\n'`
    CERT_NODE="
  <cert>
    <refid>${REF}</refid>
    <descr>${SERVER_DESCR}</descr>
    <caref>${CA_REF}</caref>
    <crt>${CRT}</crt>
    <prv>${PRV}</prv>
    <serial>${SERIAL}</serial>
  </cert>"
    
    sed -i '' -e '/<\/opnsense>/d' ${CONFIG_XML}
    echo "${CERT_NODE}" >> ${CONFIG_XML}
    echo '</opnsense>' >> ${CONFIG_XML}
}

check_config()
{
    if [ ! -f ${CONFIG_XML} ]; then
	echo "No ${CONFIG_XML} file found"
	exit 1
    fi
    
    grep "${CA_DESCR}" ${CONFIG_XML} > /dev/null
    if [ "$?" == 0 ]; then
	echo "CA found"
	exit 0
    fi
    
    echo "CA not found"
    exit 1
}

case $1 in
    check-config)
	echo "Check ${CONFIG_XML}"
	check_config
	exit 0
	;;
    create-keys)
	echo "Create CA certificate"
	generate_ca_cert
	generate_server_cert
	exit 0
	;;
    *)
	usage
	exit 1
	;;
esac

exit 1

